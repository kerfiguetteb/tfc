security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

        # Tous les chemins commençant par "/joueur/id/edit" ne sont accessibles qu'aux roles admin ou joueur
        # La partie "id" du chemin doit être une suite chiffres
        # Cette route correspond à la modification d'un joueur
        - { path: "^/joueur/[0-9]+/edit", roles: [ROLE_ADMIN,ROLE_JOUEUR,ROLE_ENTRAINEUR] }
        - { path: "^/entraineur/[0-9]+/edit", roles: [ROLE_ADMIN] }

        # Tous les chemins demandés commençant par "/joueur/id" ne sont accessibles qu'aux roles admin ou joueur.
        # Cette route correspond à la consultation ou la suppression d'un joueur
        # Pour bloquer l'accès à la suppression d'un joueur par un role joueur,
        # on va implémenter la détection dans le contrôleur.
        - { path: "^/joueur/[0-9]+/?$", roles: [ROLE_ADMIN,ROLE_JOUEUR,ROLE_ENTRAINEUR] }
        # - { path: "^/entraineur/[0-9]+/?$", roles: [ROLE_ADMIN] }

        # Tous les chemins commençant par "/joueur/new" ne sont accessibles qu'aux roles admin
        # Cette route correspond à la création d'un joueur
        - { path: "^/joueur/new", roles: [ROLE_ADMIN,ROLE_ENTRAINEUR] }
        - { path: "^/entraineur/new", roles: [ROLE_ADMIN,ROLE_ENTRAINEUR] }

        # Tous les chemins commençant par "/joueur" ne sont accessibles qu'aux roles admin ou joueur.
        # Cette route correspond à la consultation de la liste des joueurs
        - { path: ^/joueur, roles: [ROLE_ADMIN,ROLE_JOUEUR,ROLE_ENTRAINEUR] }
        # - { path: ^/entraineur, roles: [ROLE_ADMIN,ROLE_ENTRAINEUR] }



        # Tous les chemins commençant par "/equipe/id/edit" ne sont accessibles qu'au role admin
        # La partie "id" du chemin doit être une suite chiffres
        # Cette route correspond à la modification d'une school year
        # Pour bloquer l'accès à la suppression d'une school year par un role joueur,
        # on va implémenter la détection dans le contrôleur.
        - { path: "^/equipe/[0-9]+/edit", roles: [ROLE_ADMIN, ROLE_ENTRAINEUR] }

        # Tous les chemins demandés commençant par "/equipe/id" ne sont accessibles qu'aux roles admin ou joueur.
        # Cette route correspond à la consultation ou la suppression d'une equipe
        # Pour bloquer l'accès à la suppression d'une equipe par un role joueur,
        # on va implémenter la détection dans le contrôleur.
        - { path: "^/equipe/[0-9]+/?$", roles: [ROLE_ADMIN, ROLE_JOUEUR, ROLE_ENTRAINEUR] }

        # Tous les chemins commençant par "/equipe/new" ne sont accessibles qu'aux roles admin
        # Cette route correspond à la création d'une equipe
        - { path: "^/equipe/new", roles: [ROLE_ADMIN] }

        # Tous les chemins commençant par "/equipe" ne sont accessibles qu'aux roles admin ou JOUEUR.
        # Cette route correspond à la consultation de la liste des equipes
        - { path: ^/equipe, roles: [ROLE_ADMIN, ROLE_JOUEUR, ROLE_ENTRAINEUR] }

        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/entraineur, roles: ROLE_ENTRAINEUR }


        # Tous les chemins commençant par "/search" ne sont accessibles qu'aux roles admin ou JOUEUR.
        # Cette route correspond à la recherche de JOUEURs
        # - { path: ^/search, roles: [ROLE_ADMIN, ROLE_JOUEUR, ROLE_ENTRAINEUR] }
